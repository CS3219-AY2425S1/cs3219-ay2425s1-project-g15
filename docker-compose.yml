services:
  collaboration:
    build: ./backend/collaboration
    container_name: collaboration-container
    ports:
      - "3001:3001"
    volumes:
      - ./backend/collaboration:/app
      - /app/node_modules
    env_file:
      - ./backend/collaboration/.env
    networks:
      - peer-prep-network

  matching:
    build: ./backend/matching
    container_name: matching-container
    ports:
      - "3002:3002"
    env_file:
      - ./backend/matching/.env # Env file for matching service, to test in prod
    volumes:
      - ./backend/matching/src:/app/src
    networks:
      - peer-prep-network

  websocket:
    build: ./backend/websocket
    container_name: websocket-container
    ports:
      - "3005:3005"
    env_file:
      - ./backend/websocket/.env # Env file for matching service, to test in prod
    volumes:
      - ./backend/websocket/src:/app/src
    networks:
      - peer-prep-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    container_name: zookeeper
    platform: linux/arm64
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - peer-prep-network

  kafka:
    image: confluentinc/cp-kafka:7.7.1
    container_name: broker
    platform: linux/arm64
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: on-failure:10 # temporary workaround for kafka container failing to start the first time until we find a fix
    networks:
      - peer-prep-network

  question:
    build: ./backend/question
    container_name: question-container
    ports:
      - "3003:3003"
    volumes:
      - ./backend/question:/app
      - /app/node_modules
    env_file:
      - ./backend/question/.env
    networks:
      - peer-prep-network

  user:
    build: ./backend/user
    container_name: user-container
    ports:
      - "3004:3004"
    volumes:
      - ./backend/user:/app
      - /app/node_modules
    env_file:
      - ./backend/user/.env
    networks:
      - peer-prep-network

  mongo:
    image: mongo
    container_name: mongo-container
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - peer-prep-network

volumes:
  mongo-data:

networks:
  peer-prep-network:
